apiVersion: v1
kind: Template
metadata:
  annotations:
    description: Deployment template for a Vue app served by a Caddy webserver
    tags: angular, caddy
  name: ${NAME}${SUFFIX}
objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${APP_NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        name: ${NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
      name: ${NAME}${SUFFIX}
    spec:
      replicas: 1
      selector:
        name: ${NAME}${SUFFIX}
        deploymentconfig: ${NAME}${SUFFIX}
      strategy:
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: ${APP_NAME}${SUFFIX}
            app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
            name: ${NAME}${SUFFIX}
            app-group: ${APP_GROUP}
            role: ${ROLE}
            env: ${TAG_NAME}
            deploymentconfig: ${NAME}${SUFFIX}
        spec:
          volumes:
            - name: ${NAME}${SUFFIX}-caddy-config-volume
              configMap:
                name: ${CADDY_CONFIG_MAP_NAME}${SUFFIX}
                items:
                  - key: ${CADDY_CONFIG_FILE_NAME}
                    path: ${CADDY_CONFIG_FILE_NAME}
            - name: ${NAME}${SUFFIX}-app-config-volume
              configMap:
                name: ${APP_CONFIG_MAP_NAME}${SUFFIX}
                items:
                  - key: ${APP_CONFIG_FILE_NAME}
                    path: ${APP_CONFIG_FILE_NAME}
            - name: ${NAME}${SUFFIX}-app-logo-volume
              configMap:
                name: ${APP_CONFIG_MAP_NAME}${SUFFIX}
                items:
                  - key: ${APP_LOGO_FILE_NAME}
                    path: ${APP_LOGO_FILE_NAME}
            - name: ${NAME}${SUFFIX}-app-terms-volume
              configMap:
                name: ${APP_CONFIG_MAP_NAME}${SUFFIX}
                items:
                  - key: ${APP_TERMS_FILE_NAME}
                    path: ${APP_TERMS_FILE_NAME}
            - name: ${NAME}${SUFFIX}-app-unauthorized-volume
              configMap:
                name: ${APP_CONFIG_MAP_NAME}${SUFFIX}
                items:
                  - key: ${APP_UNAUTHORIZED_FILE_NAME}
                    path: ${APP_UNAUTHORIZED_FILE_NAME}
            - name: ${NAME}${SUFFIX}-app-vuetify-volume
              configMap:
                name: ${APP_CONFIG_MAP_NAME}${SUFFIX}
                items:
                  - key: ${APP_VUETIFY_FILE_NAME}
                    path: ${APP_VUETIFY_FILE_NAME}
          containers:
            - image: ${NAME}${SUFFIX}
              imagePullPolicy: Always
              name: ${NAME}${SUFFIX}
              ports:
                - containerPort: 8080
                  protocol: TCP
              env:
                - name: WEB_HOST_NAME
                  value: ${WEB_HOST_NAME}
                - name: WEB_HOST_PORT
                  value: ${WEB_HOST_PORT}
                - name: WEB_HOST_TLS
                  value: ${WEB_HOST_TLS}
                - name: API_HOST
                  value: ${API_HOST}${SUFFIX}
                - name: API_PORT
                  value: ${API_PORT}
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
              volumeMounts:
                - name: ${NAME}${SUFFIX}-caddy-config-volume
                  mountPath: ${CADDY_CONFIG_MOUNT_PATH}${CADDY_CONFIG_FILE_NAME}
                  subPath: ${CADDY_CONFIG_FILE_NAME}
                - name: ${NAME}${SUFFIX}-app-config-volume
                  mountPath: ${APP_CONFIG_MOUNT_PATH}${APP_CONFIG_FILE_NAME}
                  subPath: ${APP_CONFIG_FILE_NAME}
                - name: ${NAME}${SUFFIX}-app-vuetify-volume
                  mountPath: ${APP_CONFIG_MOUNT_PATH}${APP_VUETIFY_FILE_NAME}
                  subPath: ${APP_VUETIFY_FILE_NAME}
                - name: ${NAME}${SUFFIX}-app-logo-volume
                  mountPath: ${APP_ARTIFACT_MOUNT_PATH}${APP_LOGO_FILE_NAME}
                  subPath: ${APP_LOGO_FILE_NAME}
                - name: ${NAME}${SUFFIX}-app-terms-volume
                  mountPath: ${APP_ARTIFACT_MOUNT_PATH}${APP_TERMS_FILE_NAME}
                  subPath: ${APP_TERMS_FILE_NAME}
                - name: ${NAME}${SUFFIX}-app-unauthorized-volume
                  mountPath: ${APP_ARTIFACT_MOUNT_PATH}${APP_UNAUTHORIZED_FILE_NAME}
                  subPath: ${APP_UNAUTHORIZED_FILE_NAME}
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 30
                timeoutSeconds: 60
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 10
                timeoutSeconds: 60
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}${SUFFIX}
            from:
              kind: ImageStreamTag
              namespace: ${IMAGE_NAMESPACE}
              name: ${SOURCE_IMAGE_NAME}:${TAG_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${APP_NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        name: ${NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
      name: ${NAME}${SUFFIX}
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        name: ${NAME}${SUFFIX}
        deploymentconfig: ${NAME}${SUFFIX}
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: ${APP_NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        name: ${NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
      name: ${NAME}${SUFFIX}
    spec:
      host: ${APPLICATION_DOMAIN}
      port:
        targetPort: 8080-tcp
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${NAME}${SUFFIX}
        weight: 100
  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: ${NAME}-allow-ingress
      labels:
        name: ${NAME}-allow-ingress
        app: ${APP_GROUP}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      description: |
        Allow traffic from routes into the ${ROLE} container(s).
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  network.openshift.io/policy-group: ingress
      podSelector:
        matchLabels:
          role: ${ROLE}
          app: ${APP_GROUP}
          env: ${TAG_NAME}
      policyTypes:
        - Ingress
  
parameters:
  - description: The name assigned to all of the openshift objects defined in this
      template. It is also the name of runtime image you want.
    displayName: Name
    name: NAME
    required: true
    value: csb-audio-demo
  - name: APP_NAME
    displayName: App Name
    description: Used to group components together in the OpenShift console.
    required: true
    value: csb-audio-demo
  - name: APP_GROUP
    displayName: App Group
    description: The name assigned to all of the deployments in this project.
    required: true
    value: csb-audio-demo
  - name: SUFFIX
    displayName: Suffix
    description: A suffix applied to all of the objects in this template.
    required: false
    value: ''
  - name: ROLE
    displayName: Role
    description: The role of this service within the application - used for Network
      Policies
    required: true
    value: public-frontend
  - description: The namespace where to get the above image name
    displayName: Image Namespace
    name: IMAGE_NAMESPACE
    required: true
    value: a99fd4-tools
  - name: NAMESPACE_NAME
    displayName: Namespace Name
    description: The name of the namespace being deployed to..
    required: true
    value: a99fd4
  - name: CADDY_CONFIG_FILE_NAME
    displayName: CAddy Config File Name
    description: The name of the configuration file to be used for Caddy.
    required: true
    value: Caddyfile
  - name: CADDY_CONFIG_MAP_NAME
    displayName: Caddyfile Config Map Name
    description: The name of the configuration map.
    required: true
    value: csb-audio-demo-caddy-conf
  - name: CADDY_CONFIG_MOUNT_PATH
    displayName: Config Mount Path
    description: The path to use to mount the config file.
    required: true
    value: /etc/
  - name: APP_CONFIG_MAP_NAME
    displayName: Application Config Map Name
    description: The name of the configuration map holding the data to configure the
      application.
    required: true
    value: csb-audio-demo-config
  - name: APP_CONFIG_MOUNT_PATH
    displayName: Application Config Mount Path
    description: The path to use to mount the configuration file(s).
    required: true
    value: /srv/config/
  - name: APP_CONFIG_FILE_NAME
    displayName: Application Config File Name
    description: The name of the application configuration file.
    required: true
    value: config.json
  - name: APP_VUETIFY_FILE_NAME
    displayName: Application Vuetify File Name
    description: The name of the application vuetify file.
    required: true
    value: vuetify.json
  - name: APP_ARTIFACT_MOUNT_PATH
    displayName: Application Artifact Mount Path
    description: The path to use to mount the application artifact file(s).
    required: true
    value: /srv/
  - name: APP_LOGO_FILE_NAME
    displayName: Application logo File Name
    description: The name of the application logo file.
    required: true
    value: logo.svg
  - name: APP_TERMS_FILE_NAME
    displayName: Application Terms File Name
    description: The name of the application terms file.
    required: true
    value: terms-and-conditions.html
  - name: APP_UNAUTHORIZED_FILE_NAME
    displayName: Application Unauthorized File Name
    description: The name of the application unauthorized file.
    required: true
    value: unauthorized.html
  - name: WEB_HOST_NAME
    displayName: Web Host Name
    description: The host name used by Caddy.
    required: true
    value: 0.0.0.0
  - name: WEB_HOST_PORT
    displayName: Web Host Port
    description: The port used by Caddy to serve content.
    required: true
    value: '8080'
  - name: WEB_HOST_TLS
    displayName: Config Mount Path
    description: The path to use to mount the config file.
    required: true
    value: 'off'
  - name: API_HOST
    displayName: API Service Name
    description: The name of the API service.
    required: true
    value: issuer-api
  - name: API_PORT
    displayName: API Service Port
    description: The port used by the API service.
    required: true
    value: '8080'
  - description: The exposed hostname that will route to the service, e.g., myappname.apps.silver.devops.gov.bc.ca,
      if left blank a value will be defaulted.
    displayName: Application Hostname
    name: APPLICATION_DOMAIN
    value: ''
  - name: SOURCE_IMAGE_NAME
    displayName: Source Image Name
    description: The name of the image to use for this resource.
    required: true
    value: csb-audio-demo
  - description: The TAG name for this environment, e.g., dev, test, prod
    displayName: Env TAG name
    name: TAG_NAME
    value: latest
  - name: CPU_REQUEST
    displayName: Resources CPU Request
    description: The resources CPU request (in cores) for this build.
    required: true
    value: 10m
  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: 250m
  - name: MEMORY_REQUEST
    displayName: Resources Memory Request
    description: The resources Memory request (in Mi, Gi, etc) for this build.
    required: true
    value: 100Mi
  - name: MEMORY_LIMIT
    displayName: Resources Memory Limit
    description: The resources Memory limit (in Mi, Gi, etc) for this build.
    required: true
    value: 256Mi
